# == DO NOT EDIT THE FOLLOWING LINES for the Raspberry Pi Pico VS Code Extension to work ==
if(WIN32)
    set(USERHOME $ENV{USERPROFILE})
else()
    set(USERHOME $ENV{HOME})
endif()
set(sdkVersion 2.1.1)
set(toolchainVersion 14_2_Rel1)
set(picotoolVersion 2.1.1)
set(picoVscode ${USERHOME}/.pico-sdk/cmake/pico-vscode.cmake)
if (EXISTS ${picoVscode})
    include(${picoVscode})
endif()
# ====================================================================================
# Generated Cmake Pico project file

cmake_minimum_required(VERSION 3.13)

set(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
set(PICO_BOARD pico_w CACHE STRING "Board type")

# Pull in Raspberry Pi Pico SDK (must be before project)
include(pico_sdk_import.cmake)

project(lora_project_receptor C CXX ASM)

# Initialise the Raspberry Pi Pico SDK
pico_sdk_init()

include_directories(
    ${CMAKE_SOURCE_DIR}/inc
)

# Add executable. Default name is the project name, version 0.1

add_executable(lora_project_receptor
    main.c
    inc/button/button.c
    inc/buzzer/buzzer.c
    inc/led_rgb/led.c
    inc/i2c_protocol/i2c_protocol.c
    inc/display/ssd1306.c
    inc/sensors/aht20.c
    inc/sensors/bmp280.c
)

pico_set_program_name(lora_project_receptor "lora_project_receptor")
pico_set_program_version(lora_project_receptor "0.1")

# Modify the below lines to enable/disable output over UART/USB
pico_enable_stdio_uart(lora_project_receptor 1)
pico_enable_stdio_usb(lora_project_receptor 1)

# Add the standard library to the build
target_link_libraries(lora_project_receptor
    pico_stdlib
    hardware_i2c
    hardware_pwm
    hardware_adc
    hardware_spi
)

# Add the standard include files to the build
target_include_directories(lora_project_receptor PRIVATE
    ${CMAKE_CURRENT_LIST_DIR}
    ${CMAKE_CURRENT_LIST_DIR}/inc
)

pico_add_extra_outputs(lora_project_receptor)

